"""Add missing columns to tasks and user_profiles tables

Revision ID: 64721e6575d6
Revises: 
Create Date: 2025-06-28 15:23:15.414692

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '64721e6575d6'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('student')
    op.add_column('tasks', sa.Column('user_email', sa.String(), nullable=True))
    op.execute("UPDATE tasks SET reminder = NULL WHERE reminder = '';")
    op.alter_column('tasks', 'reminder',
               existing_type=sa.VARCHAR(),
               type_=sa.DateTime(),
               existing_nullable=True,
               postgresql_using="reminder::timestamp without time zone")
    op.add_column('user_profiles', sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True))
    op.add_column('user_profiles', sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True))
    op.alter_column('user_profiles', 'email',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               existing_nullable=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_profiles', 'email',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               existing_nullable=True)
    op.drop_column('user_profiles', 'updated_at')
    op.drop_column('user_profiles', 'created_at')
    op.alter_column('tasks', 'reminder',
               existing_type=sa.DateTime(),
               type_=sa.VARCHAR(),
               existing_nullable=True)
    op.drop_column('tasks', 'user_email')
    op.create_table('student',
    sa.Column('id', postgresql.ARRAY(sa.INTEGER()), autoincrement=False, nullable=True)
    )
    # ### end Alembic commands ###
